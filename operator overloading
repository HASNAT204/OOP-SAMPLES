#include<iostream>
using namespace std;
class rational
{
	int p;
	int q;
public:
	rational()
	{
		p = 1;
		q = 1;
	}
	rational(int p, int q)
	{
		this->p = p;
		this->q = q;
	}
	rational(rational& r)
	{
		this->p = r.p;
		this->q = r.q;
	}
	int getp()
	{
		return p;
	}
	int getq()
	{
		return q;
	}
	void setp(int p)
	{
		this->p = p;
	}
	void setq()
	{
		this->q = q;
	}

	rational operator +(rational r)
	{
		rational temp;
		temp.p = this->p * r.q + this->q * r.p;
		temp.q = this->q * r.q;        
		return temp;
	}
	friend ostream &operator<<(ostream& out, rational& r);
};
ostream& operator<<(ostream& out, rational& r) 
{    out<< r.p << "/" << r.q;    
     return out; }
int main() {
	rational r1(3, 4), r2(2, 5), r3;
	r3 = r1 + r2;
	cout << "Sum of " << r1 << " and " << r2 << " is " << r3 << endl;
}
